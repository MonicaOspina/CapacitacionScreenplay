//es para indicar de donde saco mis librerias,  
 	repositories{
		mavenLocal() //busca las que ya haya descargado
		mavenCentral()//busca en mvn repository, las que no encuentra en mvn local
		jcenter()//busca en otro repositorio en mvn 
		}
		
	buildscript{//especifico pluggins que necesite inyectarle a gradle
		repositories{
			mavenLocal()
			mavenCentral()
			jcenter()
		}
		dependencies{
			classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.13")//carga pluggins cuando se ejecuta gradle
			//no para le proyecto
		}
	}
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: 'net.serenity-bdd.aggregator'//es para poder tener un par de tareas en gradle que genera reportes
          //clear Reports, aggregate 
          
	dependencies{
		testCompile 'net.serenity-bdd:serenity-core:2.0.8'
		testCompile 'net.serenity-bdd:serenity-junit:2.0.8'
		testCompile ('junit:junit:4.12')
		testCompile ('org.assertj:assertj-core:1.7.0')
		testCompile ('org.slf4j:slf4j-simple:1.7.7')
		
		compile 'net.serenity-bdd:serenity-core:1.9.9'
		compile 'net.serenity-bdd:serenity-junit:1.9.9'
		compile 'net.serenity-bdd:serenity-cucumber:1.9.5'
		compile 'net.serenity-bdd:serenity-screenplay:1.9.9'
		compile 'net.serenity-bdd:serenity-screenplay-webdriver:1.9.9'
	}
	gradle.startParameter.continueOnFailure=true
	test.finalizedBy(aggregate)